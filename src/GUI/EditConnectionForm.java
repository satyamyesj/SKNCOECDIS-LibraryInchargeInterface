/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Connection.ConnectionDetails;
import LibraryIncharge.*;
import java.net.InetAddress;
import java.net.UnknownHostException;
import javafx.application.Platform;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class EditConnectionForm extends javax.swing.JFrame {

    /**
     * Creates new form LoginActivity
     */
    public ConnectionDetails connectionDetails;
    private final boolean calledAtStart;
    
    public EditConnectionForm(ConnectionDetails connectionDetails, boolean calledAtStart) {
        initComponents();
        this.calledAtStart = calledAtStart;
        this.setAlwaysOnTop(true);
        this.connectionDetails = connectionDetails;
        ipText.setText(this.connectionDetails.ipAddress);
        portText.setText(String.valueOf(this.connectionDetails.portAddress));
        if(calledAtStart){
            cancelButton.setEnabled(false);
            //this.setDefaultCloseOperation(this.closeFrame());
        }
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editConnectionPanel = new javax.swing.JPanel();
        activityTitleLabel = new javax.swing.JLabel();
        ipLabel = new javax.swing.JLabel();
        ipText = new javax.swing.JTextField();
        portLabel = new javax.swing.JLabel();
        portText = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("SKNCOECDIS v18.1 - Departmental Library");
        setBackground(new java.awt.Color(255, 255, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.white);
        setIconImage(new ImageIcon(getClass().getResource(LibraryInchargeInterface.interfaceFrameImageIconPath)).getImage()
        );
        setResizable(false);

        editConnectionPanel.setBackground(new java.awt.Color(235, 232, 247));

        activityTitleLabel.setFont(new java.awt.Font("Century Schoolbook", 3, 28)); // NOI18N
        activityTitleLabel.setForeground(new java.awt.Color(131, 56, 209));
        activityTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        activityTitleLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/64px/Edit.png"))); // NOI18N
        activityTitleLabel.setText("Edit Connection");

        ipLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        ipLabel.setForeground(new java.awt.Color(131, 106, 209));
        ipLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        ipLabel.setText("ip address :");

        ipText.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        ipText.setForeground(new java.awt.Color(131, 56, 209));
        ipText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 106, 209)));
        ipText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipTextActionPerformed(evt);
            }
        });

        portLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        portLabel.setForeground(new java.awt.Color(131, 106, 209));
        portLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        portLabel.setText("port :");

        portText.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        portText.setForeground(new java.awt.Color(131, 56, 209));
        portText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 106, 209)));
        portText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portTextActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        saveButton.setForeground(new java.awt.Color(131, 56, 209));
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32px/SaveButton.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(131, 56, 209));
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32px/CancelButton.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editConnectionPanelLayout = new javax.swing.GroupLayout(editConnectionPanel);
        editConnectionPanel.setLayout(editConnectionPanelLayout);
        editConnectionPanelLayout.setHorizontalGroup(
            editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editConnectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(activityTitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(editConnectionPanelLayout.createSequentialGroup()
                        .addGroup(editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ipLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(portLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ipText)
                            .addComponent(portText, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editConnectionPanelLayout.createSequentialGroup()
                        .addGap(0, 357, Short.MAX_VALUE)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        editConnectionPanelLayout.setVerticalGroup(
            editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editConnectionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(activityTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ipText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(portLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(portText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editConnectionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(118, 118, 118))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editConnectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editConnectionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ipTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipTextActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        this.setAlwaysOnTop(false);
        if (!(ipText.getText().equals("") || portText.getText().equals(""))) {
            try {
                String ipAddress = ipText.getText().trim();
                connectionDetails.ipAddress = ipAddress;
                InetAddress.getByName(ipAddress);
                int portAddress = Integer.parseInt(portText.getText().trim());
                connectionDetails.portAddress = portAddress;
                if (portAddress <= 65535 && 1023 <= portAddress) {
                     connectionDetails=ConnectionDetails.saveConnectionDetails(connectionDetails);
                    if (connectionDetails.portAddress != 0) {
                        LibraryInchargeInterface.ipAddress = InetAddress.getByName(connectionDetails.ipAddress);
                        LibraryInchargeInterface.portAddress = connectionDetails.portAddress;
                        if (!calledAtStart) {
                            GUI.libraryInchargeInterfaceFrame.setEnabled(true);
                            GUI.libraryInchargeInterfacePanel.showRequestResult("connection details updated successfully");
                            this.dispose();
                        } else {
                            this.dispose();
                            LoginForm loginForm = new LoginForm();
                            loginForm.setTitle(LibraryInchargeInterface.interfaceFrameTitle);
                            ImageIcon logo;
                            logo = new ImageIcon(getClass().getResource(LibraryInchargeInterface.interfaceFrameImageIconPath));
                            loginForm.setIconImage(logo.getImage());
                            loginForm.setLocationRelativeTo(null);
                            loginForm.pack();
                            loginForm.setVisible(true);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "connection not saved");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "incorrect port");
                }
            } catch (UnknownHostException e) {
                JOptionPane.showMessageDialog(null, "incorrect host or port");
            }
            catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "incorrect port - range 1023 to 65535");
            }
        } else {
            JOptionPane.showMessageDialog(null, "ip address & port number required to save connection"); 
        }
        this.setAlwaysOnTop(true);
    }//GEN-LAST:event_saveButtonActionPerformed

    private void portTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portTextActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
            if(!calledAtStart){
            GUI.libraryInchargeInterfaceFrame.setEnabled(true);
            GUI.libraryInchargeInterfacePanel.showRequestResult("connection details not updated");
            this.dispose();
            }
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(EditConnectionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(EditConnectionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(EditConnectionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(EditConnectionForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
////        java.awt.EventQueue.invokeLater(new Runnable() {
////            public void run() {
////                new EditConnectionForm().setVisible(true);
////                
////            }
////        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel activityTitleLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel editConnectionPanel;
    private javax.swing.JLabel ipLabel;
    private javax.swing.JTextField ipText;
    private javax.swing.JLabel portLabel;
    private javax.swing.JTextField portText;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

    private int closeFrame() {
         Platform.exit();
         return 3; //EXIT_ON_CLOSE
    }
}
