/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DatabaseAccessObjects.QueryObjects.AddPublisherAttributes;
import DatabaseAccessObjects.ResultObjects.PublisherQueryResult;
import LibraryIncharge.ServerRequests;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author hp
 */
public class UpdatePublisherForm extends javax.swing.JFrame {

    /**
     * Creates new form verifyStudentForm
     */
    boolean correctInput = true;
    Color forgroundColor = new Color(131, 56, 209);
    Color backgroundColor=new Color(235, 232, 247);
     List<PublisherQueryResult> publisherQueryResultsList=new ArrayList<>();
  

    public UpdatePublisherForm(List<PublisherQueryResult> publisherQueryResultList) {
        initComponents();
        this.publisherQueryResultsList=publisherQueryResultList;
        selectPublisherIDComboBox.removeAllItems();
        for (int i = 0; i < this.publisherQueryResultsList.size(); i++) {
            selectPublisherIDComboBox.addItem(this.publisherQueryResultsList.get(i).publisher_name);
        }
        selectPublisherIDComboBox.setSelectedIndex(-1);
        selectPublisherIDComboBox.setForeground(forgroundColor);
        selectPublisherIDComboBox.setBackground(backgroundColor);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        updatePublisherTitlePanel = new javax.swing.JPanel();
        updatePublisherTitleLable = new javax.swing.JLabel();
        publisherNameLabel = new javax.swing.JLabel();
        messageLabel = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();
        publisherNameText = new javax.swing.JTextField();
        selectPublisherIDComboBox = new javax.swing.JComboBox<>();
        publisherIDLabel = new javax.swing.JLabel();
        publisherIDText = new javax.swing.JTextField();
        selectPublisherLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("SKNCOECDIS v.18.1 - Departmental Library");
        setResizable(false);

        updatePublisherTitlePanel.setBackground(new java.awt.Color(235, 232, 247));

        updatePublisherTitleLable.setFont(new java.awt.Font("Century Schoolbook", 3, 28)); // NOI18N
        updatePublisherTitleLable.setForeground(new java.awt.Color(131, 56, 209));
        updatePublisherTitleLable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        updatePublisherTitleLable.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/64px/Edit2.png"))); // NOI18N
        updatePublisherTitleLable.setText("Update Publisher");

        publisherNameLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        publisherNameLabel.setForeground(new java.awt.Color(131, 56, 209));
        publisherNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        publisherNameLabel.setText("publisher name: ");

        messageLabel.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        messageLabel.setForeground(new java.awt.Color(131, 56, 209));
        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageLabel.setText("select & update publisher");

        cancelButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(131, 56, 209));
        cancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32px/CancelButton.png"))); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        updateButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        updateButton.setForeground(new java.awt.Color(131, 56, 209));
        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/32px/UpdateButton.png"))); // NOI18N
        updateButton.setText("Update");
        updateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        publisherNameText.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        publisherNameText.setForeground(new java.awt.Color(131, 106, 209));
        publisherNameText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 106, 209)));
        publisherNameText.setSelectionColor(new java.awt.Color(203, 192, 235));
        publisherNameText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                publisherNameTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                publisherNameTextKeyTyped(evt);
            }
        });

        selectPublisherIDComboBox.setBackground(new java.awt.Color(235, 232, 247));
        selectPublisherIDComboBox.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        selectPublisherIDComboBox.setForeground(new java.awt.Color(131, 106, 209));
        selectPublisherIDComboBox.setToolTipText("");
        selectPublisherIDComboBox.setAutoscrolls(true);
        selectPublisherIDComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                selectPublisherIDComboBoxItemStateChanged(evt);
            }
        });
        selectPublisherIDComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                selectPublisherIDComboBoxMousePressed(evt);
            }
        });
        selectPublisherIDComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPublisherIDComboBoxActionPerformed(evt);
            }
        });
        selectPublisherIDComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                selectPublisherIDComboBoxKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                selectPublisherIDComboBoxKeyTyped(evt);
            }
        });

        publisherIDLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        publisherIDLabel.setForeground(new java.awt.Color(131, 56, 209));
        publisherIDLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        publisherIDLabel.setText("publisher id : ");

        publisherIDText.setEditable(false);
        publisherIDText.setBackground(new java.awt.Color(235, 232, 247));
        publisherIDText.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        publisherIDText.setForeground(new java.awt.Color(131, 106, 209));
        publisherIDText.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(131, 106, 209)));
        publisherIDText.setSelectionColor(new java.awt.Color(203, 192, 235));
        publisherIDText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publisherIDTextActionPerformed(evt);
            }
        });
        publisherIDText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                publisherIDTextKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                publisherIDTextKeyTyped(evt);
            }
        });

        selectPublisherLabel.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        selectPublisherLabel.setForeground(new java.awt.Color(131, 56, 209));
        selectPublisherLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        selectPublisherLabel.setText("select publisher : ");

        javax.swing.GroupLayout updatePublisherTitlePanelLayout = new javax.swing.GroupLayout(updatePublisherTitlePanel);
        updatePublisherTitlePanel.setLayout(updatePublisherTitlePanelLayout);
        updatePublisherTitlePanelLayout.setHorizontalGroup(
            updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePublisherTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updatePublisherTitleLable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(messageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePublisherTitlePanelLayout.createSequentialGroup()
                        .addComponent(publisherNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(publisherNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(updatePublisherTitlePanelLayout.createSequentialGroup()
                        .addGroup(updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(selectPublisherLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(publisherIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectPublisherIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(publisherIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 388, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePublisherTitlePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton)))
                .addContainerGap())
        );
        updatePublisherTitlePanelLayout.setVerticalGroup(
            updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePublisherTitlePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(updatePublisherTitleLable, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(messageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectPublisherLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectPublisherIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publisherIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(publisherIDText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(publisherNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(publisherNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(updatePublisherTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updatePublisherTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(updatePublisherTitlePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
       boolean enteredAllAttributes = true;
        AddPublisherAttributes addPublisherAttributes = new AddPublisherAttributes();
        try {
            if(!publisherIDText.getText().equals("")){
                addPublisherAttributes.publisher_id=Integer.parseInt(publisherIDText.getText());
            }
            else{
                enteredAllAttributes=false;
            }
            if (!publisherNameText.getText().equals("")) {
                addPublisherAttributes.publisher_name = publisherNameText.getText();
            } else {
                enteredAllAttributes = false;
            }
            
            if (enteredAllAttributes && correctInput) {
                boolean updated_successfully;
                updated_successfully = ServerRequests.updatePublisher(addPublisherAttributes);
                if (updated_successfully) {
                    GUI.libraryInchargeInterfacePanel.showRequestResult("publisher updated successfully");
                } else {
                    GUI.libraryInchargeInterfacePanel.showRequestResult("publisher didn't updated, updated publisher name might be already present");
                }
                GUI.libraryInchargeInterfaceFrame.setEnabled(true);
                this.dispose();
            } else if (!enteredAllAttributes) {
                JOptionPane.showMessageDialog(null, "all fields are mandatory");
            } else if (!correctInput) {
                JOptionPane.showMessageDialog(null, "incorrect input");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "invalid number format");
        } catch (IOException ex) {
            Logger.getLogger(AddReportTitleForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(UpdatePublisherForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        GUI.libraryInchargeInterfacePanel.showRequestResult("publisher not updated");
        GUI.libraryInchargeInterfaceFrame.setEnabled(true);
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void publisherNameTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_publisherNameTextKeyTyped
        if (publisherNameText.getText().length() >= 50) {
            evt.consume();
            messageLabel.setForeground(Color.MAGENTA);
            messageLabel.setText("*maximum charchter length is 50");
        }
    }//GEN-LAST:event_publisherNameTextKeyTyped

    private void publisherNameTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_publisherNameTextKeyReleased
        messageLabel.setForeground(forgroundColor);
        messageLabel.setText("select & update publisher");
    }//GEN-LAST:event_publisherNameTextKeyReleased

    private void publisherIDTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_publisherIDTextKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherIDTextKeyReleased

    private void publisherIDTextKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_publisherIDTextKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherIDTextKeyTyped

    private void publisherIDTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publisherIDTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publisherIDTextActionPerformed

    private void selectPublisherIDComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPublisherIDComboBoxActionPerformed
         int selectedIndex=selectPublisherIDComboBox.getSelectedIndex();
        if(selectedIndex>-1){
            publisherIDText.setText(String.valueOf(publisherQueryResultsList.get(selectedIndex).publisher_id));
            publisherNameText.setText(String.valueOf(publisherQueryResultsList.get(selectedIndex).publisher_name));
        }
        else{
            publisherIDText.setText("");
            publisherNameText.setText("");
        }
    }//GEN-LAST:event_selectPublisherIDComboBoxActionPerformed

    private void selectPublisherIDComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selectPublisherIDComboBoxKeyReleased

    }//GEN-LAST:event_selectPublisherIDComboBoxKeyReleased

    private void selectPublisherIDComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_selectPublisherIDComboBoxItemStateChanged
        
    }//GEN-LAST:event_selectPublisherIDComboBoxItemStateChanged

    private void selectPublisherIDComboBoxMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectPublisherIDComboBoxMousePressed
        
    }//GEN-LAST:event_selectPublisherIDComboBoxMousePressed

    private void selectPublisherIDComboBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_selectPublisherIDComboBoxKeyTyped

    }//GEN-LAST:event_selectPublisherIDComboBoxKeyTyped

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(verifyStudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(verifyStudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(verifyStudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(verifyStudentForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new VerifyStudentForm().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JLabel publisherIDLabel;
    private javax.swing.JTextField publisherIDText;
    private javax.swing.JLabel publisherNameLabel;
    private javax.swing.JTextField publisherNameText;
    private javax.swing.JComboBox<String> selectPublisherIDComboBox;
    private javax.swing.JLabel selectPublisherLabel;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel updatePublisherTitleLable;
    private javax.swing.JPanel updatePublisherTitlePanel;
    // End of variables declaration//GEN-END:variables
}
